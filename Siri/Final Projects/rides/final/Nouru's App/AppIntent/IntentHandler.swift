//
//  AppDelegate.swift
//  Todd's App
//
//  Created by Nouru Muneza on 1/18/17.
//  Copyright Â© 2017 Nouru Muneza. All rights reserved.
//

import Intents

class IntentHandler: INExtension, INRequestRideIntentHandling {
    override func handler(for intent: INIntent) -> Any? {
        return self
    }
    
    func handle(requestRide intent: INRequestRideIntent, completion: @escaping (INRequestRideIntentResponse) -> Void) {
        print("handle")
        let status = INRideStatus()
        status.rideIdentifier = "unique identifier generated by your ride app logic"
        status.estimatedPickupDate = Date()
        status.estimatedDropOffDate = Date(timeInterval: 5000, since: status.estimatedPickupDate!)
        status.driver = INRideDriver(phoneNumber: "1-555-555-5555", nameComponents: nil, displayName: "Herman", image: nil, rating: nil)
        status.vehicle = INRideVehicle()
        status.phase = INRidePhase.approachingPickup
        let response = INRequestRideIntentResponse(code: .success, userActivity: nil)
        response.rideStatus = status
        completion(response)
    }
    
    func resolvePickupLocation(forRequestRide intent: INRequestRideIntent, with completion: @escaping (INPlacemarkResolutionResult) -> Void) {
        print("resolvePickupLocation")
        if let pickupLocation = intent.pickupLocation {
            completion(INPlacemarkResolutionResult.success(with: pickupLocation))
        }
        else {
            completion(INPlacemarkResolutionResult.needsValue())
        }
    }
    
    func resolvePartySize(forRequestRide intent: INRequestRideIntent, with completion: @escaping (INIntegerResolutionResult) -> Void) {
        print("resolvePartySize")
        completion(INIntegerResolutionResult.success(with: 1))
    }
    
    func resolveDropOffLocation(forRequestRide intent: INRequestRideIntent, with completion: @escaping (INPlacemarkResolutionResult) -> Void) {
        print("resolveDropOffLocation")
        if let dropOffLocation = intent.dropOffLocation {
            completion(INPlacemarkResolutionResult.success(with: dropOffLocation))
        }
        else {
            completion(INPlacemarkResolutionResult.needsValue())
        }
    }
}

